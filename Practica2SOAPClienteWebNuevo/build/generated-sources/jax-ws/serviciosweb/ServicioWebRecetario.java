
package serviciosweb;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "servicioWebRecetario", targetNamespace = "http://serviciosWeb/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServicioWebRecetario {


    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "start", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.Start")
    @ResponseWrapper(localName = "startResponse", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.StartResponse")
    @Action(input = "http://serviciosWeb/servicioWebRecetario/startRequest", output = "http://serviciosWeb/servicioWebRecetario/startResponse")
    public void start();

    /**
     * 
     * @param nombreFichero
     */
    @WebMethod
    @RequestWrapper(localName = "exportarRecetario", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ExportarRecetario")
    @ResponseWrapper(localName = "exportarRecetarioResponse", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ExportarRecetarioResponse")
    @Action(input = "http://serviciosWeb/servicioWebRecetario/exportarRecetarioRequest", output = "http://serviciosWeb/servicioWebRecetario/exportarRecetarioResponse")
    public void exportarRecetario(
        @WebParam(name = "nombreFichero", targetNamespace = "")
        String nombreFichero);

    /**
     * 
     * @param nombreFichero
     */
    @WebMethod
    @RequestWrapper(localName = "importarRecetario", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ImportarRecetario")
    @ResponseWrapper(localName = "importarRecetarioResponse", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ImportarRecetarioResponse")
    @Action(input = "http://serviciosWeb/servicioWebRecetario/importarRecetarioRequest", output = "http://serviciosWeb/servicioWebRecetario/importarRecetarioResponse")
    public void importarRecetario(
        @WebParam(name = "nombreFichero", targetNamespace = "")
        String nombreFichero);

    /**
     * 
     * @param recetario
     */
    @WebMethod
    @RequestWrapper(localName = "crearRecetario", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.CrearRecetario")
    @ResponseWrapper(localName = "crearRecetarioResponse", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.CrearRecetarioResponse")
    @Action(input = "http://serviciosWeb/servicioWebRecetario/crearRecetarioRequest", output = "http://serviciosWeb/servicioWebRecetario/crearRecetarioResponse")
    public void crearRecetario(
        @WebParam(name = "recetario", targetNamespace = "")
        Recetario recetario);

    /**
     * 
     * @param receta
     */
    @WebMethod
    @RequestWrapper(localName = "addReceta", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.AddReceta")
    @ResponseWrapper(localName = "addRecetaResponse", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.AddRecetaResponse")
    @Action(input = "http://serviciosWeb/servicioWebRecetario/addRecetaRequest", output = "http://serviciosWeb/servicioWebRecetario/addRecetaResponse")
    public void addReceta(
        @WebParam(name = "receta", targetNamespace = "")
        Receta receta);

    /**
     * 
     * @param nombreReceta
     */
    @WebMethod
    @RequestWrapper(localName = "rmvReceta", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.RmvReceta")
    @ResponseWrapper(localName = "rmvRecetaResponse", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.RmvRecetaResponse")
    @Action(input = "http://serviciosWeb/servicioWebRecetario/rmvRecetaRequest", output = "http://serviciosWeb/servicioWebRecetario/rmvRecetaResponse")
    public void rmvReceta(
        @WebParam(name = "nombreReceta", targetNamespace = "")
        String nombreReceta);

    /**
     * 
     * @return
     *     returns serviciosweb.Recetario
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "obtenerRecetario", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ObtenerRecetario")
    @ResponseWrapper(localName = "obtenerRecetarioResponse", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ObtenerRecetarioResponse")
    @Action(input = "http://serviciosWeb/servicioWebRecetario/obtenerRecetarioRequest", output = "http://serviciosWeb/servicioWebRecetario/obtenerRecetarioResponse")
    public Recetario obtenerRecetario();

    /**
     * 
     * @param nombreReceta
     * @return
     *     returns serviciosweb.Receta
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "obtenerReceta", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ObtenerReceta")
    @ResponseWrapper(localName = "obtenerRecetaResponse", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ObtenerRecetaResponse")
    @Action(input = "http://serviciosWeb/servicioWebRecetario/obtenerRecetaRequest", output = "http://serviciosWeb/servicioWebRecetario/obtenerRecetaResponse")
    public Receta obtenerReceta(
        @WebParam(name = "nombreReceta", targetNamespace = "")
        String nombreReceta);

    /**
     * 
     * @param nombreFichero
     * @param nombreReceta
     */
    @WebMethod
    @RequestWrapper(localName = "exportarReceta", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ExportarReceta")
    @ResponseWrapper(localName = "exportarRecetaResponse", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ExportarRecetaResponse")
    @Action(input = "http://serviciosWeb/servicioWebRecetario/exportarRecetaRequest", output = "http://serviciosWeb/servicioWebRecetario/exportarRecetaResponse")
    public void exportarReceta(
        @WebParam(name = "nombreFichero", targetNamespace = "")
        String nombreFichero,
        @WebParam(name = "nombreReceta", targetNamespace = "")
        String nombreReceta);

    /**
     * 
     * @param nombreFichero
     */
    @WebMethod
    @RequestWrapper(localName = "importarReceta", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ImportarReceta")
    @ResponseWrapper(localName = "importarRecetaResponse", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ImportarRecetaResponse")
    @Action(input = "http://serviciosWeb/servicioWebRecetario/importarRecetaRequest", output = "http://serviciosWeb/servicioWebRecetario/importarRecetaResponse")
    public void importarReceta(
        @WebParam(name = "nombreFichero", targetNamespace = "")
        String nombreFichero);

    /**
     * 
     * @param nombreFichero
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validarXSD", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ValidarXSD")
    @ResponseWrapper(localName = "validarXSDResponse", targetNamespace = "http://serviciosWeb/", className = "serviciosweb.ValidarXSDResponse")
    @Action(input = "http://serviciosWeb/servicioWebRecetario/validarXSDRequest", output = "http://serviciosWeb/servicioWebRecetario/validarXSDResponse")
    public String validarXSD(
        @WebParam(name = "nombreFichero", targetNamespace = "")
        String nombreFichero);

}
